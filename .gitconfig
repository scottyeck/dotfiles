[user]
  name = Scotty Eckenthal
  email = scott.eckenthal@gmail.com
[push]
	default = current
[core]
  excludesfile = ~/.gitignore
  ignorecase = false


[alias]
  # PR Review Helpers, via Jake Zimmerman // https://jez.io/
  # @see https://blog.jez.io/cli-code-review/
  #
  # list files which have changed since REVIEW_BASE
  # (REVIEW_BASE defaults to 'master' in my zshrc)
  files = !git diff --name-only $(git merge-base HEAD \"$REVIEW_BASE\")

  # Same as above, but with a diff stat instead of just names
  # (better for interactive use)
  stat = !git diff --stat $(git merge-base HEAD \"$REVIEW_BASE\")

  # Open all files changed since REVIEW_BASE in Vim tabs
  # Then, run fugitive's :Gdiff in each tab, and finally
  # tell vim-gitgutter to show +/- for changes since REVIEW_BASE
  review = !vim -p $(git files) +\"tabdo Gdiff $REVIEW_BASE\" +\"let g:gitgutter_diff_base = '$REVIEW_BASE'\"

  # Same as the above, except specify names of files as arguments,
  # instead of opening all files:
  # git reviewone foo.js bar.js
  reviewone = !vim -p +\"tabdo Gdiff $REVIEW_BASE\" +\"let g:gitgutter_diff_base = '$REVIEW_BASE'\"

  # Finds the most common ancestor between the current branch and a
  # target and rebases onto that ancestor.
  remergebase = "!f() { git rebase --onto $1 $(git merge-base HEAD $1) ; }; f"

  # Allow for greppable stash items
  # @see https://stackoverflow.com/a/57601163
  stashgrep = "!f() { for i in `git stash list --format=\"%gd\"` ; \
            do git stash show -p $i | grep -H --label=\"$i\" \"$@\" ; done ; }; f"
[init]
	defaultBranch = main
