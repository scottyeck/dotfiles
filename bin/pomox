#!/bin/bash

# TODO:

# - [ ] chmod +x currentfile
# - [ ] specify pre-requisites in notes
#   - we need to start the atrun launch daemon
#     - @see https://unix.stackexchange.com/a/478840
#   - we need to give System Prefs permissions to terminal-notifier to show notifications
#   - we also need to give Disk Access to `atrun`
#     - @see https://unix.stackexchange.com/a/478840
# - [ ] leave notes about working with at
#   - @see https://developercoach.com/using-at-for-command-scheduling-under-mac-os-x/
#   - use `atq` to look at current jobs
#   - use `atrm` to remove dangling jobs
# - [ ] make pomox hooks optional - only execute if they exist
# - [ ] recover index to fix outstanding jobs
# - [ ] update docs because Alacritty needs full disk access (or at the very least elevated
#       perms) to suppress the confirmation on run.
# - [ ] support pause

status() {
	source ~/.pomox/current
	# This time is wrong - it terminates on the minute rather than being granular to the second
	if [[ $START_TIME = "" ]]; then
		echo "üçÖ - üßò Ready"
		exit 0
	fi

	# START_TIME=$(echo $SERIALIZED_CURRENT | awk '{print $1}')

	GDATE_DURATION="+$DURATION minutes"
	END_TIME=$(gdate --date "${START_TIME} ${GDATE_DURATION}" --iso-8601="seconds")
	NOW=$(gdate --iso-8601="seconds")

	NOW_S=$(gdate --date "${NOW}" '+%s')
	END_S=$(gdate --date "${END_TIME}" '+%s')
	DIFF_S=$(($END_S - $NOW_S))
	TIMESTAMP=$(gdate -u -d @${DIFF_S} +"%M:%S")
	echo "üçÖ - ‚è±  $TIMESTAMP"
}

start() {
	SERIALIZED_CURRENT=$(cat ~/.pomox/current)
	if [[ ! $SERIALIZED_CURRENT = "" ]]; then
		echo "Pomodoro active - please clear before starting."
		status
		exit 1
	fi

	START_TIME=$(gdate --iso-8601="seconds")
	GDATE_DURATION="+$DURATION minutes"
	END_TIME=$(gdate --date "$START_TIME $GDATE_DURATION" --iso-8601="seconds")

	# TODO: Make start / end hooks optional.
	$HOME/.pomox/hooks/start
	RESULT="$(echo "reattach-to-user-namespace pomox end" | at $(gdate --date "$END_TIME" +"%H:%M %D"))"
	# This is currently not working, so I can't recover the index to cancel outstanding jobs.
	AT_INDEX="$(echo "$RESULT" | awk '{print $2}')"
	printf "START_TIME=%s\nDURATION=%s\nAT_INDEX=%s\n" "$START_TIME" "$DURATION" "$AT_INDEX" >~/.pomox/current

	status
}

end() {
	truncate -s 0 $HOME/.pomox/current
	$HOME/.pomox/hooks/end
	# We don't have access to the specific atq entry, so in the meantime, just empty it
	atq | awk '{print $1}' | xargs atrm
	echo "üçÖ - Pomodoro complete!"
}

debug() {
	echo "DURATION: $DURATION"
	echo "START_TIME: $START_TIME"
}

pomox() {
	local cmd=$1
	shift

	while getopts d:D:k: flag; do
		case "${flag}" in
		d)
			DURATION="${OPTARG}"
			;;
		D)
			DESCRIPTION="${OPTARG}"
			;;
		k)
			KIND="${OPTARG}"
			;;
		esac
	done

	DURATION="${DURATION:-25}"

	if [ $cmd = "start" ]; then
		start
	elif [ $cmd = "status" ]; then
		status
	elif [ $cmd = "end" ]; then
		end
	elif [ $cmd = "debug" ]; then
		debug
	else
		echo "pomox - command \"$cmd\" not found"
		exit 1
	fi
}

pomox "$@"
