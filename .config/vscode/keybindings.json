// Place your key bindings in this file to override the defaults
[
  // Make breadcrumbs work more like vim-vinegar
  // @see https://stackoverflow.com/questions/54834068/replacement-for-vim-vinegar-in-vs-code
  {
    "key": "-",
    "command": "breadcrumbs.focusPrevious",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+f8",
    "command": "-editor.action.marker.prev",
    "when": "editorFocus"
  },

  // "Telescope-like"
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpen"
  },

  // Tmux / Vim style pane-navigation
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": "!inQuickOpen"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "!inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.navigateUp",
    "when": "!inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.navigateDown",
    "when": "!inQuickOpen"
  },
  {
    "key": "ctrl+w =",
    "command": "workbench.action.evenEditorWidths"
  },
  // Move up and down in a list in the sidebar
  {
    "key": "j",
    "command": "list.focusDown",
    "when": "listFocus"
  },
  {
    "key": "k",
    "command": "list.focusUp",
    "when": "listFocus"
  },
  {
    "key": "enter",
    "command": "list.select",
    "when": "explorerViewletVisible && filesExplorerFocus"
  },
  // Move up and down in a list in the pop-up menu
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+v",
    "command": "breadcrumbs.revealFocusedFromTreeAside",
    "when": "inQuickOpen"
  },

  // References list
  {
    "key": "ctrl+j",
    "command": "goToNextReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "ctrl+k",
    "command": "goToPreviousReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },

  // Search ("Spectre-like")
  {
    "key": "enter",
    // Sorta counter-intuitive, but the Search Editor uses "Go-to-Definition"
    // for result-navigation rather than exposing a "Go to result file" or something.
    "command": "editor.action.revealDefinition",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "ctrl+j",
    "command": "search.action.focusNextSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "ctrl+k",
    "command": "search.action.focusPreviousSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "ctrl+u",
    "command": "extension.vim_ctrl+u",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "ctrl+d",
    "command": "extension.vim_ctrl+d",
    "when": "hasSearchResult || inSearchEditor"
  },

  {
    "key": "cmd+j cmd+j",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.terminal.focus"
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "cmd+j cmd+j",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.togglePanel",
        "workbench.action.focusActiveEditorGroup"
      ]
    },
    "when": "terminalFocus"
  },

  {
    "key": "cmd+j cmd+r",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.positionPanelRight",
        "workbench.action.terminal.focus"
      ]
    },
    "when": "panelPosition == 'bottom'"
  },
  {
    "key": "cmd+j cmd+r",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.positionPanelBottom",
        "workbench.action.terminal.focus"
      ]
    },
    "when": "panelPosition == 'right'"
  },
  {
    "key": "cmd+j cmd+f",
    "command": "workbench.action.toggleMaximizedPanel"
  },



  // Edamagit
  // @see https://github.com/kahole/edamagit#vim-support-vscodevim

  {
    "key": "g g",
    "command": "cursorTop",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "g r",
    "command": "magit.refresh",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "=",
    "command": "magit.toggle-fold",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode != 'Insert'"
  },
  {
    "key": "c c",
    "command": "magit.commit",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode != 'Insert'"
  },
  {
    "key": "tab",
    "command": "extension.vim_tab",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
  },
  {
    "key": "tab",
    "command": "-extension.vim_tab",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "x",
    "command": "magit.discard-at-point",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "k",
    "command": "-magit.discard-at-point"
  },
  {
    "key": "-",
    "command": "magit.reverse-at-point",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "v",
    "command": "-magit.reverse-at-point"
  },
  {
    "key": "shift+-",
    "command": "magit.reverting",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "shift+v",
    "command": "-magit.reverting"
  },
  {
    "key": "shift+o",
    "command": "magit.resetting",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "shift+x",
    "command": "-magit.resetting"
  },
  {
    "key": "x",
    "command": "-magit.reset-mixed"
  },
  {
    "key": "ctrl+u x",
    "command": "-magit.reset-hard"
  }
]
